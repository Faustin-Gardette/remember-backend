// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  pseudo   String
  password String

  box          Box?
  LearnSection LearnSection?
  cards        Card[]
}

model Box {
  id       String    @id @default(cuid())
  name     String
  sections Section[]

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Section {
  id       Int    @id @default(autoincrement())
  name     String
  position Int?

  daysOfMonth     Int[] // Jours spécifiques du mois (1-31)
  months          Int[] // Mois spécifiques de l'année (1-12)
  daysOfWeek      Int[] // Jours spécifiques de la semaine (0-6, où 0 = dimanche)
  intervalDays    Int? // Intervalle en jours pour les déclenchements récurrents
  lastTriggeredAt DateTime?

  boxId String
  box   Box    @relation(fields: [boxId], references: [id])

  cards Card[]
}

model Card {
  id Int @id @default(autoincrement())

  recto String
  verso String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  sectionId Int?
  section   Section? @relation(fields: [sectionId], references: [id])

  learnSectionId Int?
  learnSection   LearnSection? @relation(fields: [learnSectionId], references: [id])
}

model LearnSection {
  id Int @id @default(autoincrement())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  card Card[]
}

// model Card {
//   id Int @id @default(autoincrement())

//   recto String
//   verso String

//   categoryId    Int?
//   category      Category?    @relation(fields: [categoryId], references: [id])
//   subCategoryId Int?
//   subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
//   deckId        Int?
//   deck          Deck?        @relation(fields: [deckId], references: [id])
//   sectionId     Int?
//   section       Section?     @relation(fields: [sectionId], references: [id])
// }

// model Deck {
//   id    Int    @id @default(autoincrement())
//   name  String
//   value String
//   Card  Card[]
// }

// model Category {
//   id    Int    @id @default(autoincrement())
//   name  String
//   value String
//   Card  Card[]
// }

// model SubCategory {
//   id    Int    @id @default(autoincrement())
//   name  String
//   value String
//   Card  Card[]
// }
